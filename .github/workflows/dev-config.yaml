apiVersion: apps/v1
kind: Deployment
metadata:
  name: pharma-gest-web
  namespace: dev  # Namespace spécifique à l'environnement dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pharma-gest-web
  template:
    metadata:
      labels:
        app: pharma-gest-web
    spec:
      containers:
      - name: pharma-gest-web
        image: monrepo/pharma-gest-web:latest  # Image Docker pour l'application
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_URI
          value: "mongodb://myuser:mypassword@mongo:27017/nuxt-crud"
        volumeMounts:
        - name: app-volume
          mountPath: /app
      volumes:
      - name: app-volume
        emptyDir: {}  # Volume temporaire

---
apiVersion: v1
kind: Service
metadata:
  name: pharma-gest-service
  namespace: dev
spec:
  selector:
    app: pharma-gest-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_DATABASE
          value: "nuxt-crud"
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "myuser"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "mypassword"
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      volumes:
      - name: mongo-data
        persistentVo
